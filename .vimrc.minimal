" variables -------------------------------------------------------------------
syn on
set title
set autoindent
set ignorecase
set nowrap
set smartindent
set number
set listchars=eol:$,tab:>-,trail:~
set hlsearch
set foldmethod=indent
set foldlevel=99
set timeoutlen=200
set colorcolumn=80
set cursorline
set clipboard=unnamedplus
set mouse=a

let mapleader = " "

" theme -----------------------------------------------------------------------
set background=dark

" cursor
hi clear CursorLine
hi clear CursorLineNR
hi CursorLine cterm=NONE ctermbg=black
hi ColorColumn cterm=NONE ctermbg=black

" spell
hi clear SpellBad
hi SpellBad cterm=underline

" tabs
hi clear TabLine
hi clear TabLineSel
hi clear TabLineFill
hi TabLine ctermfg=grey ctermbg=none
hi TabLineSel ctermfg=white ctermbg=none
hi TabLineFill ctermfg=none ctermbg=none

hi clear StatusLine
hi StatusLine ctermfg=white ctermbg=none

hi clear StatusLineNC
hi StatusLineNC ctermfg=grey ctermbg=none

" mappings --------------------------------------------------------------------
nnoremap Q <nop>

" dvorak movement keys
map h <Left>
map t <Down>
map n <Up>
map s <Right>

map T <PageDown>
map N <PageUp>

" search
nnoremap <Enter> n
nnoremap <BS> N

" toggles
map <silent> <Leader>l :set invlist<CR>
map <silent> <Leader>p :set invpaste<CR>
map <silent> <leader>n :set invnumber<CR>

" close
map <silent> q :q!<CR>
map <silent> w :w<CR>:redraw!<CR>
map <silent> x :x<CR>
map <silent> e :e<CR>

" completion
map <silent> <C-o> i<C-x><C-o>
map <silent> <C-f> i<C-x><C-f>
imap <silent> <C-o> <C-x><C-o>
imap <silent> <C-f> <C-x><C-f>

" hlsearch
map <silent> <leader>h :nohl<CR>

" tabs ------------------------------------------------------------------------
map <silent> H :tabprevious<CR>
map <silent> S :tabnext<CR>

map <silent> ! :tabmove -1<CR>
map <silent> @ :tabmove +1<CR>
map <silent> + :tabnew<CR>

" functions -------------------------------------------------------------------
" Trim
highlight WhitespaceEOL ctermbg=red guibg=red
call matchadd('WhitespaceEOL', '\s\+$')

function! Trim()
  let lineNumber = line('.')
  %s/\s*$//
  call cursor(lineNumber, 0)
endfunction

command! -nargs=0 Trim :call Trim()

" local vimrc -----------------------------------------------------------------
source ~/.vimrc.local
